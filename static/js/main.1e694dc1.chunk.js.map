{"version":3,"sources":["components/AccountBalance.js","components/Debits.js","components/Home.js","components/UserProfile.js","components/Credits.js","App.js","serviceWorker.js","index.js"],"names":["AccountBalance","props","balance","accountBalance","toFixed","Debits","handleAddDebit","e","newDebit","description","state","newDescription","amount","parseFloat","newAmount","date","newDate","setState","prevState","debitItems","debit","handleChange","target","name","value","Date","toISOString","debitList","this","map","x","to","pathname","className","Form","Label","for","Input","type","placeholder","onChange","readOnly","Button","onClick","Component","Home","location","src","alt","UserProfile","userName","memberSince","Credits","handleAddCredit","newCredit","creditItems","credit","creditList","App","componentDidMount","Promise","all","getDebits","getCredits","a","async","axios","get","data","forEach","i","console","log","resolve","currentUser","exact","path","render","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1e694dc1.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction AccountBalance(props) {\r\n\tconst balance = props.accountBalance.toFixed(2);\r\n\treturn <div>Balance: ${balance}</div>;\r\n}\r\n\r\nexport default AccountBalance;\r\n","import React, { Component } from \"react\";\r\nimport { Form, Label, Input, Button } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nclass Debits extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tdebitItems: props.debitItems,\r\n\t\t\tdebit: props.debit,\r\n\t\t\taccountBalance: props.accountBalance,\r\n\t\t\tnewDescription: \"\",\r\n\t\t\tnewAmount: 0,\r\n\t\t\tnewDate: new Date().toISOString()\r\n\t\t};\r\n\t}\r\n\r\n\thandleAddDebit = e => {\r\n\t\tlet newDebit = {\r\n\t\t\tdescription: this.state.newDescription,\r\n\t\t\tamount: parseFloat(this.state.newAmount),\r\n\t\t\tdate: this.state.newDate\r\n\t\t};\r\n\t\tthis.setState(\r\n\t\t\tprevState => ({\r\n\t\t\t\tdebitItems: [...prevState.debitItems, newDebit],\r\n\t\t\t\tdebit: prevState.debit + newDebit.amount,\r\n\t\t\t\taccountBalance: prevState.accountBalance - newDebit.amount\r\n\t\t\t}),\r\n\t\t\t() =>\r\n\t\t\t\tthis.props.handleAddDebit(\r\n\t\t\t\t\tthis.state.debitItems,\r\n\t\t\t\t\tthis.state.debit,\r\n\t\t\t\t\tthis.state.accountBalance\r\n\t\t\t\t)\r\n\t\t);\r\n\t};\r\n\r\n\thandleChange = e => {\r\n\t\tthis.setState({\r\n\t\t\t[e.target.name]: e.target.value\r\n\t\t});\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst debitList = this.state.debitItems.map(x => (\r\n\t\t\t<ul>\r\n\t\t\t\t<li>description: {x.description}</li>\r\n\t\t\t\t<li>amount: {x.amount}</li>\r\n\t\t\t\t<li>date: {x.date}</li>\r\n\t\t\t</ul>\r\n\t\t));\r\n\t\tconst balance = this.state.accountBalance.toFixed(2);\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Link\r\n\t\t\t\t\tto={{\r\n\t\t\t\t\t\tpathname: \"/\",\r\n\t\t\t\t\t\tstate: {\r\n\t\t\t\t\t\t\taccountBalance: this.state.accountBalance\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\tHome\r\n\t\t\t\t</Link>\r\n\t\t\t\t<h1>Debits Page</h1>\r\n\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h2>Account Balance Display Area</h2>\r\n\t\t\t\t\t<p>Your account balance is: ${balance}</p>\r\n\t\t\t\t\t<p>Your total debit amount is: ${this.state.debit} </p>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h2>Debit Display Area</h2>\r\n\t\t\t\t\t{debitList}\r\n\t\t\t\t</div>\r\n\t\t\t\t{/* Adding Debits Form*/}\r\n\t\t\t\t<div className=\"form-container\">\r\n\t\t\t\t\t<h2>Adding Debits Area</h2>\r\n\t\t\t\t\t<Form className=\"add-form\">\r\n\t\t\t\t\t\t<Label for=\"newDescription\">Description:</Label>\r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\tname=\"newDescription\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tplaceholder=\"Describe your transaction\"\r\n\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t<Label for=\"newAmount\">Amount:</Label>\r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\tname=\"newAmount\"\r\n\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\tplaceholder=\"0.00\"\r\n\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t<Label for=\"newDate\">Date:</Label>\r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\tname=\"newDate\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tvalue={new Date().toISOString()}\r\n\t\t\t\t\t\t\treadOnly\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t\t<Button onClick={this.handleAddDebit}>Submit</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Debits;\r\n","import React from \"react\";\r\nimport AccountBalance from \"./AccountBalance\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Home(props) {\r\n\tconst balance = props.location\r\n\t\t? props.location.state.accountBalance\r\n\t\t: props.accountBalance;\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<img\r\n\t\t\t\tsrc=\"https://cdn2.iconfinder.com/data/icons/leto-blue-ui-generic-2/64/ui-20-512.png\"\r\n\t\t\t\talt=\"bank\"\r\n\t\t\t/>\r\n\t\t\t<h1>Bank of React</h1>\r\n\r\n\t\t\t<Link to=\"/UserProfile\">User Profile</Link>\r\n\t\t\t<br></br>\r\n\t\t\t<Link to=\"/Debits\">Debits Page</Link>\r\n\t\t\t<br></br>\r\n\t\t\t<Link to=\"/Credits\">Credits Page</Link>\r\n\t\t\t<AccountBalance accountBalance={balance} />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Home;\r\n","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass UserProfile extends Component {\r\n  render() {\r\n    return (\r\n        <div>\r\n          <h1>User Profile</h1>\r\n\r\n          <Link to=\"/\">Home Page</Link>\r\n\r\n          <div>Username: {this.props.userName}</div>\r\n          <div>Member Since: {this.props.memberSince}</div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserProfile;","import React, { Component } from \"react\";\r\nimport { Form, Label, Input, Button } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nclass Credits extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tcreditItems: props.creditItems,\r\n\t\t\tcredit: props.credit,\r\n\t\t\taccountBalance: props.accountBalance,\r\n\t\t\tnewDescription: \"\",\r\n\t\t\tnewAmount: 0,\r\n\t\t\tnewDate: new Date().toISOString()\r\n\t\t};\r\n\t}\r\n\r\n\thandleAddCredit = e => {\r\n\t\tlet newCredit = {\r\n\t\t\tdescription: this.state.newDescription,\r\n\t\t\tamount: parseFloat(this.state.newAmount),\r\n\t\t\tdate: this.state.newDate\r\n\t\t};\r\n\t\tthis.setState(\r\n\t\t\tprevState => ({\r\n\t\t\t\tcreditItems: [...prevState.creditItems, newCredit],\r\n\t\t\t\tcredit: prevState.credit + newCredit.amount,\r\n\t\t\t\taccountBalance: prevState.accountBalance + newCredit.amount\r\n\t\t\t}),\r\n\t\t\t() =>\r\n\t\t\t\tthis.props.handleAddCredit(\r\n\t\t\t\t\tthis.state.creditItems,\r\n\t\t\t\t\tthis.state.credit,\r\n\t\t\t\t\tthis.state.accountBalance\r\n\t\t\t\t)\r\n\t\t);\r\n\t};\r\n\r\n\thandleChange = e => {\r\n\t\tthis.setState({\r\n\t\t\t[e.target.name]: e.target.value\r\n\t\t});\r\n\t};\r\n\r\n\trender() {\r\n\t\tlet creditList = this.state.creditItems.map(x => (\r\n\t\t\t<ul>\r\n\t\t\t\t<li>description: {x.description}</li>\r\n\t\t\t\t<li>amount: {x.amount}</li>\r\n\t\t\t\t<li>date: {x.date}</li>\r\n\t\t\t</ul>\r\n\t\t));\r\n\r\n\t\tconst balance = this.state.accountBalance.toFixed(2);\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Link\r\n\t\t\t\t\tto={{\r\n\t\t\t\t\t\tpathname: \"/\",\r\n\t\t\t\t\t\tstate: {\r\n\t\t\t\t\t\t\taccountBalance: this.state.accountBalance\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\tHome\r\n\t\t\t\t</Link>\r\n\t\t\t\t<h1>Credits Page</h1>\r\n\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h2>Account Balance Display Area</h2>\r\n\t\t\t\t\t<p>Your account balance is: ${balance}</p>\r\n\t\t\t\t\t<p>Your total credit amount is: ${this.state.credit} </p>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h2>Credit Display Area</h2>\r\n\t\t\t\t\t{creditList}\r\n\t\t\t\t</div>\r\n\t\t\t\t{/* Adding Debits Form*/}\r\n\t\t\t\t<div className=\"form-container\">\r\n\t\t\t\t\t<h2>Adding Credits Area</h2>\r\n\t\t\t\t\t<Form className=\"add-form\">\r\n\t\t\t\t\t\t<Label for=\"newDescription\">Description:</Label>\r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\tname=\"newDescription\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tplaceholder=\"Describe your transaction\"\r\n\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t<Label for=\"newAmount\">Amount:</Label>\r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\tname=\"newAmount\"\r\n\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\tplaceholder=\"0.00\"\r\n\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t<Label for=\"newDate\">Date:</Label>\r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\tname=\"newDate\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tvalue={new Date().toISOString()}\r\n\t\t\t\t\t\t\treadOnly\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t\t<Button onClick={this.handleAddCredit}>Submit</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Credits;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport { Home, UserProfile, Debits, Credits } from \"./components\";\r\nimport axios from \"axios\";\r\n\r\nconst API_URL_DEBIT = \"https://moj-api.herokuapp.com/debits\";\r\nconst API_URL_CREDIT = \"https://moj-api.herokuapp.com/credits\";\r\nclass App extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\taccountBalance: 0,\r\n\t\t\tcredit: 0,\r\n\t\t\tdebit: 0,\r\n\t\t\tcreditItems: [],\r\n\t\t\tdebitItems: [],\r\n\t\t\tcurrentUser: {\r\n\t\t\t\tuserName: \"bob_loblaw\",\r\n\t\t\t\tmemberSince: \"08/23/99\"\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount = () => {\r\n\t\treturn Promise.all([this.getDebits(), this.getCredits()]);\r\n\t};\r\n\r\n\tgetDebits = async () => {\r\n\t\ttry {\r\n\t\t\tlet res = await axios.get(API_URL_DEBIT);\r\n\t\t\t// console.log(res);\r\n\t\t\tres.data.forEach(i => {\r\n\t\t\t\tthis.setState(prevState => ({\r\n\t\t\t\t\tdebitItems: [...prevState.debitItems, i],\r\n\t\t\t\t\tdebit: prevState.debit + i.amount,\r\n\t\t\t\t\taccountBalance: prevState.accountBalance - i.amount\r\n\t\t\t\t}));\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t\treturn Promise.resolve(\"success\");\r\n\t};\r\n\r\n\tgetCredits = async () => {\r\n\t\ttry {\r\n\t\t\tlet res = await axios.get(API_URL_CREDIT);\r\n\t\t\t// console.log(res);\r\n\t\t\tres.data.forEach(i => {\r\n\t\t\t\tthis.setState(prevState => ({\r\n\t\t\t\t\tcreditItems: [...prevState.creditItems, i],\r\n\t\t\t\t\tcredit: prevState.credit + i.amount,\r\n\t\t\t\t\taccountBalance: prevState.accountBalance + i.amount\r\n\t\t\t\t}));\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t\treturn Promise.resolve(\"success\");\r\n\t};\r\n\r\n\thandleAddDebit = (debitItems, debit, accountBalance) => {\r\n\t\tthis.setState({\r\n\t\t\tdebitItems: debitItems,\r\n\t\t\tdebit: debit,\r\n\t\t\taccountBalance: accountBalance\r\n\t\t});\r\n\t};\r\n\r\n\thandleAddCredit = (creditItems, credit, accountBalance) => {\r\n\t\tthis.setState({\r\n\t\t\tcreditItems: creditItems,\r\n\t\t\tcredit: credit,\r\n\t\t\taccountBalance: accountBalance\r\n\t\t});\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst {\r\n\t\t\taccountBalance,\r\n\t\t\tdebit,\r\n\t\t\tcredit,\r\n\t\t\tdebitItems,\r\n\t\t\tcreditItems\r\n\t\t} = this.state;\r\n\r\n\t\tconst HomeComponent = () => <Home accountBalance={accountBalance} />;\r\n\t\tconst UserProfileComponent = () => (\r\n\t\t\t<UserProfile\r\n\t\t\t\tuserName={this.state.currentUser.userName}\r\n\t\t\t\tmemberSince={this.state.currentUser.memberSince}\r\n\t\t\t/>\r\n\t\t);\r\n\t\tconst DebitsComponent = () => (\r\n\t\t\t<Debits\r\n\t\t\t\tdebit={debit}\r\n\t\t\t\tdebitItems={debitItems}\r\n\t\t\t\taccountBalance={accountBalance}\r\n\t\t\t\thandleAddDebit={this.handleAddDebit}\r\n\t\t\t/>\r\n\t\t);\r\n\t\tconst CreditsComponent = () => (\r\n\t\t\t<Credits\r\n\t\t\t\tcredit={credit}\r\n\t\t\t\tcreditItems={creditItems}\r\n\t\t\t\taccountBalance={accountBalance}\r\n\t\t\t\thandleAddCredit={this.handleAddCredit}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\treturn (\r\n\t\t\t<Router>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Route exact path=\"/\" render={HomeComponent} />\r\n\t\t\t\t\t<Route exact path=\"/userProfile\" render={UserProfileComponent} />\r\n\t\t\t\t\t<Route exact path=\"/debits\" render={DebitsComponent} />\r\n\t\t\t\t\t<Route exact path=\"/credits\" render={CreditsComponent} />\r\n\t\t\t\t</div>\r\n\t\t\t</Router>\r\n\t\t);\r\n\t}\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
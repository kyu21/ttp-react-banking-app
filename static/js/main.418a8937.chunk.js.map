{"version":3,"sources":["components/AccountBalance.js","components/TransactionForm.js","components/Debits.js","components/Home.js","components/UserProfile.js","components/Credits.js","App.js","serviceWorker.js","index.js"],"names":["AccountBalance","props","balance","accountBalance","toFixed","TransactionForm","handleChange","e","setState","target","name","value","handleFormSubmit","transactionType","state","newDescription","newAmount","newDate","handleAddDebit","handleAddCredit","Date","className","this","Form","Label","for","Input","type","placeholder","onChange","toLocaleString","readOnly","Button","onClick","Component","Debits","newDebit","description","amount","parseFloat","date","prevState","debitItems","debit","debitList","map","x","key","to","Home","src","alt","UserProfile","userName","memberSince","Credits","newCredit","creditItems","credit","creditList","App","componentDidMount","Promise","all","getDebits","getCredits","a","async","axios","get","data","forEach","i","console","log","resolve","currentUser","basename","exact","path","render","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.418a8937.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction AccountBalance(props) {\n\tconst balance = props.accountBalance.toFixed(2);\n\treturn <p>Account Balance: ${balance}</p>;\n}\n\nexport default AccountBalance;\n","import React, { Component } from \"react\";\nimport { Form, Label, Input, Button } from \"reactstrap\";\n\nclass TransactionForm extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tnewDescription: \"\",\n\t\t\tnewAmount: 0,\n\t\t\tnewDate: new Date()\n\t\t};\n\t}\n\n\thandleChange = e => {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t};\n\n\thandleFormSubmit = () => {\n\t\tconst transactionType = this.props.transactionType;\n\t\tconst { newDescription, newAmount, newDate } = this.state;\n\t\tif (transactionType === \"debit\") {\n\t\t\tthis.props.handleAddDebit(newDescription, newAmount, newDate);\n\t\t} else if (transactionType === \"credit\") {\n\t\t\tthis.props.handleAddCredit(newDescription, newAmount, newDate);\n\t\t}\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"form-container\">\n\t\t\t\t<h2>Adding {this.state.transactionType} Area</h2>\n\t\t\t\t<Form className=\"add-form\">\n\t\t\t\t\t<Label for=\"newDescription\">Description:</Label>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tname=\"newDescription\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"Describe your transaction\"\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t/>\n\t\t\t\t\t<br></br>\n\t\t\t\t\t<Label for=\"newAmount\">Amount:</Label>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tname=\"newAmount\"\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tplaceholder=\"0.00\"\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t/>\n\t\t\t\t\t<br></br>\n\t\t\t\t\t<Label for=\"newDate\">Date:</Label>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tname=\"newDate\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tvalue={new Date().toLocaleString()}\n\t\t\t\t\t\treadOnly\n\t\t\t\t\t/>\n\t\t\t\t</Form>\n\t\t\t\t<Button onClick={this.handleFormSubmit}>Submit</Button>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default TransactionForm;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AccountBalance from \"./AccountBalance\";\nimport TransactionForm from \"./TransactionForm\";\nclass Debits extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tdebitItems: props.debitItems,\n\t\t\tdebit: props.debit,\n\t\t\taccountBalance: props.accountBalance\n\t\t};\n\t}\n\n\thandleAddDebit = (newDescription, newAmount, newDate) => {\n\t\tlet newDebit = {\n\t\t\tdescription: newDescription,\n\t\t\tamount: parseFloat(newAmount),\n\t\t\tdate: newDate\n\t\t};\n\t\tthis.setState(\n\t\t\tprevState => ({\n\t\t\t\tdebitItems: [...prevState.debitItems, newDebit],\n\t\t\t\tdebit: prevState.debit + newDebit.amount,\n\t\t\t\taccountBalance: prevState.accountBalance - newDebit.amount\n\t\t\t}),\n\t\t\t() =>\n\t\t\t\tthis.props.handleAddDebit(\n\t\t\t\t\tthis.state.debitItems,\n\t\t\t\t\tthis.state.debit,\n\t\t\t\t\tthis.state.accountBalance\n\t\t\t\t)\n\t\t);\n\t};\n\n\thandleChange = e => {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t};\n\n\trender() {\n\t\tconst debitList = this.state.debitItems.map(x => (\n\t\t\t<ul key={x.description}>\n\t\t\t\t<li>description: {x.description}</li>\n\t\t\t\t<li>amount: {x.amount}</li>\n\t\t\t\t<li>date: {new Date(x.date).toLocaleString()}</li>\n\t\t\t</ul>\n\t\t));\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Link to=\"/\">Home Page</Link>\n\t\t\t\t<h1>Debits Page</h1>\n\n\t\t\t\t<div>\n\t\t\t\t\t<h2>Account Balance Display Area</h2>\n\t\t\t\t\t<AccountBalance accountBalance={this.state.accountBalance} />\n\t\t\t\t\t<p>Your total debit amount is: ${this.state.debit} </p>\n\t\t\t\t</div>\n\n\t\t\t\t<div>\n\t\t\t\t\t<h2>Debit Display Area</h2>\n\t\t\t\t\t{debitList}\n\t\t\t\t</div>\n\t\t\t\t{/* Adding Debits Form*/}\n\t\t\t\t<TransactionForm\n\t\t\t\t\ttransactionType=\"debit\"\n\t\t\t\t\thandleAddDebit={this.handleAddDebit}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Debits;\n","import React from \"react\";\nimport AccountBalance from \"./AccountBalance\";\nimport { Link } from \"react-router-dom\";\n\nfunction Home(props) {\n\treturn (\n\t\t<div>\n\t\t\t<img\n\t\t\t\tsrc=\"https://cdn2.iconfinder.com/data/icons/leto-blue-ui-generic-2/64/ui-20-512.png\"\n\t\t\t\talt=\"bank\"\n\t\t\t/>\n\t\t\t<h1>Bank of React</h1>\n\n\t\t\t<Link to=\"/UserProfile\">User Profile</Link>\n\t\t\t<br></br>\n\t\t\t<Link to=\"/Debits\">Debits Page</Link>\n\t\t\t<br></br>\n\t\t\t<Link to=\"/Credits\">Credits Page</Link>\n\t\t\t<AccountBalance accountBalance={props.accountBalance} />\n\t\t</div>\n\t);\n}\n\nexport default Home;\n","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\n\nclass UserProfile extends Component {\n  render() {\n    return (\n        <div>\n          <h1>User Profile</h1>\n\n          <Link to=\"/\">Home Page</Link>\n\n          <div>Username: {this.props.userName}</div>\n          <div>Member Since: {this.props.memberSince}</div>\n        </div>\n    );\n  }\n}\n\nexport default UserProfile;","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AccountBalance from \"./AccountBalance\";\nimport TransactionForm from \"./TransactionForm\";\nclass Credits extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tcreditItems: props.creditItems,\n\t\t\tcredit: props.credit,\n\t\t\taccountBalance: props.accountBalance\n\t\t};\n\t}\n\n\thandleAddCredit = (newDescription, newAmount, newDate) => {\n\t\tlet newCredit = {\n\t\t\tdescription: newDescription,\n\t\t\tamount: parseFloat(newAmount),\n\t\t\tdate: newDate\n\t\t};\n\t\tthis.setState(\n\t\t\tprevState => ({\n\t\t\t\tcreditItems: [...prevState.creditItems, newCredit],\n\t\t\t\tcredit: prevState.credit + newCredit.amount,\n\t\t\t\taccountBalance: prevState.accountBalance + newCredit.amount\n\t\t\t}),\n\t\t\t() =>\n\t\t\t\tthis.props.handleAddCredit(\n\t\t\t\t\tthis.state.creditItems,\n\t\t\t\t\tthis.state.credit,\n\t\t\t\t\tthis.state.accountBalance\n\t\t\t\t)\n\t\t);\n\t};\n\n\thandleChange = e => {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t};\n\n\trender() {\n\t\tlet creditList = this.state.creditItems.map(x => (\n\t\t\t<ul>\n\t\t\t\t<li>description: {x.description}</li>\n\t\t\t\t<li>amount: {x.amount}</li>\n\t\t\t\t<li>date: {new Date(x.date).toLocaleString()}</li>\n\t\t\t</ul>\n\t\t));\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Link to=\"/\">Home Page</Link>\n\t\t\t\t<h1>Credits Page</h1>\n\n\t\t\t\t<div>\n\t\t\t\t\t<h2>Account Balance Display Area</h2>\n\t\t\t\t\t<AccountBalance accountBalance={this.state.accountBalance} />\n\t\t\t\t\t<p>Your total credit amount is: ${this.state.credit} </p>\n\t\t\t\t</div>\n\n\t\t\t\t<div>\n\t\t\t\t\t<h2>Credit Display Area</h2>\n\t\t\t\t\t{creditList}\n\t\t\t\t</div>\n\t\t\t\t{/* Adding Debits Form*/}\n\t\t\t\t<TransactionForm\n\t\t\t\t\ttransactionType=\"credit\"\n\t\t\t\t\thandleAddCredit={this.handleAddCredit}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Credits;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { Home, UserProfile, Debits, Credits } from \"./components\";\nimport axios from \"axios\";\n\nconst API_URL_DEBIT = \"https://moj-api.herokuapp.com/debits\";\nconst API_URL_CREDIT = \"https://moj-api.herokuapp.com/credits\";\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\taccountBalance: 0,\n\t\t\tcredit: 0,\n\t\t\tdebit: 0,\n\t\t\tcreditItems: [],\n\t\t\tdebitItems: [],\n\t\t\tcurrentUser: {\n\t\t\t\tuserName: \"bob_loblaw\",\n\t\t\t\tmemberSince: \"08/23/99\"\n\t\t\t}\n\t\t};\n\t}\n\n\tcomponentDidMount = () => {\n\t\treturn Promise.all([this.getDebits(), this.getCredits()]);\n\t};\n\n\tgetDebits = async () => {\n\t\ttry {\n\t\t\tlet res = await axios.get(API_URL_DEBIT);\n\t\t\t// console.log(res);\n\t\t\tres.data.forEach(i => {\n\t\t\t\tthis.setState(prevState => ({\n\t\t\t\t\tdebitItems: [...prevState.debitItems, i],\n\t\t\t\t\tdebit: prevState.debit + i.amount,\n\t\t\t\t\taccountBalance: prevState.accountBalance - i.amount\n\t\t\t\t}));\n\t\t\t});\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t\treturn Promise.resolve(\"success\");\n\t};\n\n\tgetCredits = async () => {\n\t\ttry {\n\t\t\tlet res = await axios.get(API_URL_CREDIT);\n\t\t\t// console.log(res);\n\t\t\tres.data.forEach(i => {\n\t\t\t\tthis.setState(prevState => ({\n\t\t\t\t\tcreditItems: [...prevState.creditItems, i],\n\t\t\t\t\tcredit: prevState.credit + i.amount,\n\t\t\t\t\taccountBalance: prevState.accountBalance + i.amount\n\t\t\t\t}));\n\t\t\t});\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t\treturn Promise.resolve(\"success\");\n\t};\n\n\thandleAddDebit = (debitItems, debit, accountBalance) => {\n\t\tthis.setState({\n\t\t\tdebitItems: debitItems,\n\t\t\tdebit: debit,\n\t\t\taccountBalance: accountBalance\n\t\t});\n\t};\n\n\thandleAddCredit = (creditItems, credit, accountBalance) => {\n\t\tthis.setState({\n\t\t\tcreditItems: creditItems,\n\t\t\tcredit: credit,\n\t\t\taccountBalance: accountBalance\n\t\t});\n\t};\n\n\trender() {\n\t\tconst {\n\t\t\taccountBalance,\n\t\t\tdebit,\n\t\t\tcredit,\n\t\t\tdebitItems,\n\t\t\tcreditItems\n\t\t} = this.state;\n\n\t\tconst HomeComponent = () => <Home accountBalance={accountBalance} />;\n\t\tconst UserProfileComponent = () => (\n\t\t\t<UserProfile\n\t\t\t\tuserName={this.state.currentUser.userName}\n\t\t\t\tmemberSince={this.state.currentUser.memberSince}\n\t\t\t/>\n\t\t);\n\t\tconst DebitsComponent = () => (\n\t\t\t<Debits\n\t\t\t\tdebit={debit}\n\t\t\t\tdebitItems={debitItems}\n\t\t\t\taccountBalance={accountBalance}\n\t\t\t\thandleAddDebit={this.handleAddDebit}\n\t\t\t/>\n\t\t);\n\t\tconst CreditsComponent = () => (\n\t\t\t<Credits\n\t\t\t\tcredit={credit}\n\t\t\t\tcreditItems={creditItems}\n\t\t\t\taccountBalance={accountBalance}\n\t\t\t\thandleAddCredit={this.handleAddCredit}\n\t\t\t/>\n\t\t);\n\n\t\treturn (\n\t\t\t<Router basename=\"/ttp-react-banking-app\">\n\t\t\t\t<div>\n\t\t\t\t\t<Route exact path=\"/\" render={HomeComponent} />\n\t\t\t\t\t<Route exact path=\"/userProfile\" render={UserProfileComponent} />\n\t\t\t\t\t<Route exact path=\"/debits\" render={DebitsComponent} />\n\t\t\t\t\t<Route exact path=\"/credits\" render={CreditsComponent} />\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t);\n\t}\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}